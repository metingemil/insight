=========== .vimrc ============================
set nocompatible

call pathogen#infect()
syntax on
filetype plugin indent on

colors elflord
set number relativenumber
set encoding=UTF-8

set showcmd
set showmatch

" set relativenumber
set smartcase
set incsearch

" set cursorline
" set cursorlineopt=number
" autocmd ColorScheme * highlight CursorLineNr cterm=bold term=bold gui=bold

" Enables cursor line position tracking:
set cursorline
" Removes the underline causes by enabling cursorline:
highlight clear CursorLine
" Sets the line numbering to red background:
highlight CursorLineNR ctermbg=red ctermfg=black

let g:airline_powerline_fonts = 1
let g:airline_theme='solarized_flood'
let g:airline_solarized_bg='dark'
let g:airline#extensions#tabline#enabled = 1

let g:rainbow_active = 1

"X bug - keep yanked text in system clipboard after vim exit
autocmd VimLeave * call system("xclip -selection clipboard -i", getreg('+'))

map bn :bn<CR>
map bp :bp<CR>

nnoremap <c-s> :w<cr>
inoremap <c-s> <c-o>:w<cr>

"set runtimepath for fzf
set rtp+=~/git_repos/fzf

"fzf window toggle down instead of modal screen
let g:fzf_layout = { 'down': '40%'}

" This is the default option:
"   - Preview window on the right with 50% width
"   - CTRL-/ will toggle preview window.
" - Note that this array is passed as arguments to fzf#vim#with_preview function.
" - To learn more about preview window options, see `--preview-window` section of `man fzf`.
let g:fzf_preview_window = ['right:50%', 'ctrl-/']

nnoremap <Leader>p :FZF<CR>
nnoremap <Leader>P :Files<CR>
nnoremap <Leader>F :Rg <C-r><C-w><CR>
nnoremap <Leader>l :Lines <C-r><C-w><CR>

set spell spelllang=en_us

set listchars=eol:^,trail:◦,tab:»»,extends:→,precedes:←,space:·,nbsp:~
"set list


========== installed plugins ===================

1. pathogen		https://github.com/tpope/vim-pathogen
	- Installation : 
			$ mkdir -p ~/.vim/autoload ~/.vim/bundle && \
			  curl -LSso ~/.vim/autoload/pathogen.vim https://tpo.pe/pathogen.vim

	- to read the existing plugins add this to .vimrc file:
		call pathogen#infect()
		syntax on
		filetype plugin indent on

	- when adding a new plugin run :Helptags in vim

2. NERDTree		https://github.com/preservim/nerdtree
	- Installation : 
			$ git clone https://github.com/preservim/nerdtree.git ~/.vim/bundle/nerdtree

3. vim-devicons		https://github.com/ryanoasis/vim-devicons
	- Installation :
			$ git clone https://github.com/ryanoasis/vim-devicons ~/.vim/bundle/vim-devicons 

4. vim-airline		https://github.com/vim-airline/vim-airline
	- Installation :
			$ git clone https://github.com/vim-airline/vim-airline ~/.vim/bundle/vim-airline

	- we can also give a try to: 
			- powerline	https://github.com/powerline/powerline 
				and/or 
			- lightline	https://github.com/itchyny/lightline.vim

5. vim-airline-themes	https://github.com/vim-airline/vim-airline-themes
	- Installation :
			$ git clone https://github.com/vim-airline/vim-airline-themes ~/.vim/bundle/vim-airline-themes

6. vim-css-color	https://github.com/ap/vim-css-color
	- Installation :
			$ git clone https://github.com/ap/vim-css-color ~/.vim/bundle/vim-css-color

7. vim-obsession	https://github.com/tpope/vim-obsession
	- Installation : $ git clone git://github.com/tpope/vim-obsession.git ~/.vim/bundle/vim-obsession
			 $ vim -u NONE -c "helptags vim-obsession/doc" -c q
8. vim-fzf		https://github.com/junegunn/fzf.git
			and
			https://github.com/junegunn/fzf.vim.git
9. vim-rainbow		https://github.com/frazrepo/vim-rainbow

10. vim-commentary	https://github.com/tpope/vim-commentary

11. vim-rooter		https://github.com/airblade/vim-rooter

12. vim-gitgutter	https://github.com/airblade/vim-gitgutter

13. vim-go		https://github.com/fatih/vim-go

14. vim-polyglot	https://github.com/sheerun/vim-polyglot

15. vim-live-latex-preview	https://github.com/goballooning/vim-live-latex-preview


============= shortcuts ================================

ZZ — save+exit Vim the cool way
ZQ - quit+exit
zz, zt, zb — move line of your cursor to middle, top, and bottom of your view, respectively
H, M, L - move cursor to top,middle,bottom of the screen(High,Middle,Low)
10h/j/k/l - move left/down/up/right 10 lines

ctrl-u, ctrl-d — moves up/down half a page
ctrl-b, ctrl-f - move back/forward one full page
ctrl-y, ctrl-e - move screen up/down one line without moving the cursor

e - move forward to the end of a word
w - move forward to the begining of a word
3w - move forward three words
W - move forward a word
b - move backward to the begining of a word
3b - move backwards three words
0 - go to start on line
$ - go to end on line
) - jump fwd one sentence
( - jump back one sentence
} - jump fwd one paragraph
{ - jump back one paragraph 
G - jump to the end of the file
5G - jump to line 5
gg - jump to the start of the file
g; - jump to last edit 
" - return to the line where the cursor was before the latest jump
`` - return to the cursor position before the latest jump (undo the jump)
gx - follow hovered link

#, *  - search backwards, fwds the word under cursor
ctrl-l - clear search highlighting
ctrl-w - jump to a different window
ctrl-w, shift > ( ctrl-w8> ) - increase vertical split window to right (by size 8)
ctrl-w, shift < - increase vertical split window to left 
ctrl-w - - increase horizontal split window down 
ctrl-w + - increase horizontal split window up
ctrl-w arrow_up/down,left,right(j,k,h,l) -  navigate splits
ctrl-w v -> split window vertically
ctrl-w s -> split window horizontally 
ctrl-w q - quit split

ciw — deletes the word you’re hovering and automatically puts you in INSERT mode (change inside word)
C — deletes from cursor to end of line and puts you in INSERT mode

dt<char> — deletes from your cursor to the next instance of the character you specify (delete to <character>)
dw - delete from the cursor to start of next word
de - delete from cursor to end of current word
d$ - delete from the cursor to end of line


:m-5/+5 -> move current line 5 lines up/down

:reg    -> contents of registers
ctrl-r * -> paste contents of clipboard when in insert mode
ctrl-r " -> paste contents of unamed register when in insert mode

bve -> select word under cursor  /ve - if cursor at the start of word / bvE - to jump to end of word in separators in word
yiw -> yank current word
y$  -> yank from cursor to end of the line
y^  -> yank (copy) everything from the cursor to the start of the line.
yw  -> yank (copy) to the start of the next word.
yaw -> yank all word (includes a trailing space)
yy  -> yank the current line
3yy -> yank three lines starting at the current one
yap -> yank all paragraph (includes trailing newline)


x -> delete the character under the cursor
X -> delete(backspace) in normal mode
r -> replace the character under the cursor 


f<char> - move cursor to next <char> in line
i - insert before the cursor
I - insert at the begining of line
a - insert after the cursor
A - insert at the end of current line
o - append a new line below the current line and enter insert mode
O - append a new line above the current line and enter insert mode
J - join current line with the next line (removing the newline) (this adds a space between lines)
gJ - join current line with the next line (removing the newline)
3J - joins 3 lines together

u - undo
U - undo whole line
ctrl-r - redo

~ — toggles the case [upper/lower] on the character hovered or selected (tilde; key below Esc for standard keyboards)
. — repeat your last Vim command (period)
ggvG= — auto-indent the entire file (goto beginning, enter VISUAL mode, go/select to end of file, and indent lines [==] selected)

ctrl-x ctrl-f	- in insert mode -> insert file name in path
ctrl-p - in insert mode - code completion

% - match parantheses

ctrl-v - enter visual block mode
	 - select untill the last line to modify
  I	 - (shift-i) enter block insert mode
	 - make desirect changes (this happen on the first line)
  Esc	 - after escape is pressed the changes are applied to all selected lines

ctrl-t, ctrl-d - indent current linke forward/backward in insert mode
>, < - in linewise visual mode - indent selected text (repeat with .)
>>, << - in normal mode - indent current line and go to start of line

ctrl-rx - in insert mode - inserts the contents of register x

V= - reformat selected text
=  - correct alignment of code
== - reformat one line

set spell  -> enable spell checking
set nospell -> disable spell checking
set list -> enable show all characters(eol, tabs ..)
set nolist -> disable showing all characters   

set spell spelllang=en_us -> set the spelling language
set listchars=eol:^,tab:>-,trail:~,extends:>,precedes:<

]s - find the misspelled word after cursor
[s - find the misspelled word before cursor
]S - find bad words after cursor
[S - find bad words before cursor
z= - find suggestions
ctrl-xs - show suggestions when in insert mode 
zg - add correct word to dictionary
ZW - mark incorrect word 

============= resources ================================

vimtutor
https://www.cs.oberlin.edu/~kuperman/help/vim/home.html
https://vim.rtorr.com/lang/en_us/


