============ java profile ==========
jcmd -l   /  jps

jps -mlvV

jcmd 15020 VM.system_properties

jcmd 15020 VM.flags

jcmd 15020 VM.info

jcmd 15020 VM.native_memory (â€“XX:NativeMemoryTracking=summary   or  -XX:NativeMemoryTracking=detail -> causes a 5% -10% performance overhead)

jcmd 15020 JFR.check

jcmd 15020 Thread.print / jstack 15020


top -H -p 15020
ps -T -p 15020 | nl | less

CG alg used
jhsdb jmap --heap --pid 3354

jstat -gcutil [pid] 1000 (sampling interval)

======================================

# call https rest method and print on stdout
	$ wget --no-check-certificate --auth-no-challenge --user=admin --password='admin' -qO - https://localhost:8000/api/filters/76 | jq --color-output | batcat

	$ wget -O- --header "Content-Type: application/json" --post-data='[valid json data]' http://localhost:8080/openrtb





# find string in files -> page it by using colors

	$ rg --hidden --sort=path -iup adopt -g '!{.git,.svn,node_modules,.nyc_output,dist,*.out,*.html,*.md}' | batcat -p
	
	$ grep -i err -r /opt/mss/stack/logs/*ixia-nto-stack.log*

	$ rg 'err' -C 2 -ipg  'Main-Board_stack-logs_ixia-nto-stack.log*'
	
	$ ag --color 'ERR' -C 5 -i -G 'Main-Board_stack-logs_ixia-nto-stack.log*'


	-i -> ignore case
	-C 5 -> context no lines before and after 
	-u -> ignore .gitignore
	--hidden -> search in hidden files and directories
	-g -> glob pattern
	--sort=path -> sort/sortr by path
	-e  -> search for pattern


# replace string in multiple files

	$ grep -r -l "[old_string]" testdata/independent_mp_with_behaviors_test/ | xargs sed -i 's/old_string/new_string/g'



========== aws ============

aws s3 ls --profile=cross-account-transactions-prod s3://adswizz-app-data/dry-run-entity-cacher/db-cacher-20170227-devops3259/pandora/snapshot/
aws ec2 describe-instances --profile cross-account-transactions-prod

aws ec2 describe-instances --profile=cross-account-transactions-prod | jq -Cr '.Reservations[].Instances[] | .InstanceId +" | "+ .PublicIpAddress +" | "+ .PublicDnsName +" | "+ .State.Name +" | "+ (.Tags//[] | map(select(.Key=="Name"))[].Value|tostring)' | nl | less

========== VScode =========

ctrl+k+s -> view keyboard shortcuts

ctrl + alt + - -> go back

ctrl+k ctrl+0 -> fold all

ctrl+k ctrl+j -> unfold all

ctrl + shift + i -> format document

alt + shift +  o -> arrange imports

============================

sudo iptables -A INPUT -p tcp --dport 8098  -j ACCEPT   -> open tcp port with iptables


=============================


snmpwalk  -v 2c -c public 10.38.185.158:161 .1.3.6.1.4.1.32620.1.1.1.12.3.1

wget --no-check-certificate --auth-no-challenge --user=admin --password='admin' -qO - https://10.38.185.158:8000/api/cte_members

wget 'https://admin:admin@localhost:8000/api/cte_members' -qO

wget -qO - --server-response --no-check-certificate --auth-no-challenge  --header="Authorization: Bearer $TOKEN"  https://localhost:4443/api/v1/nvos/deviceconfig/a856d455-d53e-46c1-b37a-78512c83b81f/policy/8096ba97-a2eb-49fb-8506-994e453b1d58/stats/ports

wget -qO - --server-response --no-check-certificate --auth-no-challenge  https://localhost:4443/health

---
vi /usr/riak/etc/riak.conf

riak-admin bucket-type list

wget -qO - 'http://10.38.185.161:8098/types/cte_config/buckets?buckets=true'

wget -qO - 'http://10.38.185.161:8098/types/cte_config/buckets/cte_member/keys?keys=true'

wget -qO - 'http://10.38.185.161:8098/types/cte_config/buckets/cte_member/keys?keys=b9eeaf6a-16ca-39f3-bdf5-7620aed91b62'


--------

mount windows share - must install cifs-utils package

   $ sudo mount.cifs '\\annnas1.ann.is.keysight.com\CrossDept\' winShare -o user=metgemil


connect via smbclient and get or put file

   $ smbclient '\\annnas1.ann.is.keysight.com\CrossDept\' -U AD.DOMAIN.COM\\metgemil

	use ls, cd , get , put commands to navigate, copy from/to


---------

maven run test with debugger
	mvn -Dtest=MySuperClassTest -Dmaven.surefire.debug test

run test in subproject from root dir
	mvn test -Dtest=OpenRtbResponseMapperTest -pl protocol-web
	

-------------------

docker ps --all -> list running containers

docker images

docker run -it --entrypoint /bin/bash -v /Users/metin.gemil/Work/repos:/ch -v /Users/metin.gemil/.m2:/root/.m2  -v ~/servers/deliveryengine/:/root/servers/deliveryengine -v ~/.aws/:/root/.aws  maven:3.8.6-amazoncorretto-17

docker run -it --entrypoint /bin/zsh --platform linux/amd64 -v ~/Work/docker_volumes/ubuntu_vol1/:/root/shared ubuntu_mine:latest

docker exec -it funny_lewin bash
docker attach funny_lewin

docker stop funny_lewin
docker start funny_lewin -a

docker container rename CONTAINER NEW_NAME

docker system df -v

-> save container as a image 
docker commit 918d85536264 ubuntu_mine

-------------------

check used interfaces

ifconfig -a
networksetup -listallhardwareports
route get google.com

----------------------

brew list
brew list --pinned

brew info tomcat@8

brew pin tomcat@8

brew update && brew upgrade && brew autoremove && brew cleanup

----------------------





