sudo dmidecode -t system	-> get system information in human readable format

packages:
	- arandr	->  another xrandr gui
	- pavucontrol	-> a volume control for pulseaudio sound server
	- fonts-noto-color-emoji -> font for colored emojis in ubuntu (dwm, dmenu and st)
		fc-match -s "NotoColorEmoji"
	- fonts-mononoki -> monospace font
		fc-match -s "mononoki"


---------------------------


$ sudo systemctl set-default multi-user	-> disable gui  (reboot required)
$ sudo systemctl set-default graphical	-> enable gui
$ sudo systemctl start gdm3		-> start gui manually (the GDM(gnome display manager) display manager)
$ from cmd line 	-> $ startx
			-> $ gnome-session-quit

$ systemctl status gdm3 -> status of gdm service
$ systemclt status display-manager	-> when a login manager is enabled this service must also be enabled


- when disabled gdm on ubuntu with dwm and reenable the gdm3 service it didn't start the gdm login manager
  even though gdm3 and display-manager services are enabled and ran 'sudo systemctl set-default graphical' command
	-> the issue was that  /etc/systemd/system/default.target link was broken
		-> make it point to /etc/systemd/system/default.target -> /lib/systemd/system/multi-user.target




- custom cursor theme in dwm:
	following links must be valid:
	/usr/share/icons/default/index.theme -> /etc/alternatives/x-cursor-theme
	/etc/alternatives/x-cursor-theme -> /usr/share/icons/DMZ-Black/cursor.theme (this is the used theme)

	user ~/.Xresources file to set configs:
		e.g.  Xcursor.size: 24

	- when disabling gdm - in order to load the .Xresouces file add command in .xinitrc:
		xrdb -merge /home/metgemil/.Xresources





- in ubuntu with dwm - when gdm is disabled and starting X via xinit -> the GTK-applications start very very slow (once started it looked like everything ran normally). When re-enabling gdm, the GTK-applications start normally.
	-> issue solved by adding in .xinitrc: 
		dbus-update-activation-environment DISPLAY XAUTHORITY
		(I belive dbus.service must also be active )


- in order to detect monitors automatically on plug/unplug:
	- use udev for calling a script when the kernel notices a new devices being connected/disconnected
	- add the following udev rule in /etc/udev/rules.d/95-monitors.rules
			ACTION=="change", RUN+="/home/metgemil/adjustMonitors.sh"

	- reload udev rules with: $ sudo udevadm control --reload-rules

	- my adjustMonitors.sh script:

		#!/bin/sh
		# udev runs as root, so we need to tell it how to connect to the X server:
		export DISPLAY=:0
		export XAUTHORITY=/home/metgemil/.Xauthority
		
		connect(){
		          /home/metgemil/.screenlayout/3_monitors_layout.sh
		    }
		
		disconnect(){
		          /home/metgemil/.screenlayout/main_monitor_layout.sh
		      }
		
		NO_DISPLAYS=$(xrandr | grep -w 'connected' | wc -l)
		
		if [ $NO_DISPLAYS = 1 ]
		then
		        disconnect
		elif [ $NO_DISPLAYS = 3 ]
		then
		        connect
		fi

	- my .screenlayout/main_monitor_layout.sh script (generated by arandr gui application)
		
		#!/bin/sh
		xrandr --output eDP-1 --primary --mode 1920x1080 --pos 0x0 --rotate normal --output DP-1 --off --output HDMI-1 --off --output DP-2 --off --output DP-1-1 --off --output DP-1-2 --off --output DP-1-3 --off
		


	- my .screenlayout/3_monitor_layout.sh script (generated by arandr gui application)

		#!/bin/sh
		xrandr --output eDP-1 --primary --mode 1920x1080 --pos 920x1080 --rotate normal --output DP-1 --off --output HDMI-1 --off --output DP-2 --off --output DP-1-1 --mode 1920x1080 --pos 0x0 --rotate normal --output DP-1-2 --off --output DP-1-3 --mode 1920x1080 --pos 1920x0 --rotate normal
		




- in order to show boot messages or hide boot messages and show a splash screen (or graphically via plymouth)
	- adequately configure /etc/default/grub file

		GRUB_DEFAULT=0
		GRUB_TIMEOUT_STYLE=hidden
		GRUB_TIMEOUT=0   # Do not show the GRUB menu at all (when only having a single OS)
		GRUB_DISTRIBUTOR=`lsb_release -i -s 2> /dev/null || echo Debian`
		GRUB_CMDLINE_LINUX_DEFAULT=""  # show boot messages / alternatively "noplymouth"  ("quiet splash" to hide text and show splash)
		GRUB_CMDLINE_LINUX="console=tty1"  # Redirect the kernel output to another tty / jump to tty after boot
		
	- run $ sudo update-grub2  to apply the grub config file


--------------------------------------------


* using nvidia proprietary drivers

	$ ubuntu-drivers devices	-> list nvidia available drivers

	$ sudo apt install mesa-utils
	$ glxgears			-> basic video test
	$ vlbank_mode=0 glxgears	-> ignore display refresh rate
	
	$ glxinfo | grep OpenGL		-> get the used graphic device
	$ glxinfo -B
	$ glxinfo|egrep "OpenGL vendor|OpenGL renderer"
	$ DRI_PRIME=1 glxinfo | grep OpenGL	-> DRI_PRIME=1 -> use nouveau driver

	$ lspci -k | grep -A 2 -E "(VGA|3D)"	-> check video devices on system

	$ sudo apt install glmark2
	$ DRI_PRIME=1 glmark2 --fullscreen --show-all-options -> graphics test

	$ nvidia-setting	-> graphics gui the select used GPU (PRIME Profiles menu item)

	$ nvidia-smi		-> list what processes uses nvidia gpu
	$ prime-select		-> select used GPU (prime-select query; sudo prime-select nvidia; sudo prime-select intel)
	$ sudo lshw -c video	-> list video hardware
	$ lshw -numeric -C display


--------------------------------------------------------

enable tap to click on touchpad:

	$ sudo apt install xserver-xorg-input-libinput
	-> create /etc/X11/xorg.conf.d/40-libinput.conf
	-> add the following section to file:

		Section "InputClass"
		        Identifier "libinput touchpad catchall"
		        MatchIsTouchpad "on"
		        MatchDevicePath "/dev/input/event*"
		        Driver "libinput"
		        Option "Tapping" "on"
		EndSection
		
	-> restart DM


--------------------------------------------------------



LUKS encryption in ubuntu :


sudo lsblk -o NAME,FSTYPE,SIZE,MOUNTPOINT,LABEL
daca nu ai partitiile sub un sudo lsblk -o NAME,FSTYPE,SIZE,MOUNTPOINT,LABEL
└─nvme0n1p3_crypt   LVM2_member 952,7G
sub o partie d'asta cu _crypt, atunci nu va merge vpn-u
└─nvme0n1p3           crypto_LUKS 952,7G                              
 └─nvme0n1p3_crypt   LVM2_member 952,7G



marbarbu@5CD1057448R:~/quasar$ sudo lsblk -o NAME,FSTYPE,SIZE,MOUNTPOINT,LABEL
NAME                  FSTYPE       SIZE MOUNTPOINT                  LABEL
loop0                 squashfs   199,4M /snap/code/62                
loop1                 squashfs    99,2M /snap/core/10958             
loop2                 squashfs    64,8M /snap/gtk-common-themes/1514 
loop3                 squashfs    55,5M /snap/core18/1988            
loop4                 squashfs    55,5M /snap/core18/1997            
loop5                 squashfs    99,2M /snap/core/10908             
loop6                 squashfs    65,1M /snap/gtk-common-themes/1515 
loop7                 squashfs   162,9M /snap/gnome-3-28-1804/145    
loop8                 squashfs   191,6M /snap/mailspring/505         
loop9                 squashfs   179,6M /snap/spotify/46             
loop10                squashfs   220,4M /snap/code/63                
loop11                squashfs   191,8M /snap/mailspring/502         
nvme0n1                           953,9G                              
├─nvme0n1p1           vfat         512M /boot/efi                    
├─nvme0n1p2           ext4         732M /boot                        
└─nvme0n1p3           crypto_LUKS 952,7G                              
 └─nvme0n1p3_crypt   LVM2_member 952,7G                              
   ├─vgkubuntu-root  ext4       930,4G /                            
   └─vgkubuntu-swap_1 swap         976M



-> get system info
	$sudo dmidecode -t system

https://medium.com/@chrishantha/encrypting-disks-on-ubuntu-19-04-b50bfc65182a


----------------------------------------------

from ubuntu live usb:
	-> use 'gpt' partition table
	-> create desired partitions using gparted
		/dev/nvme0n1
			-> nvme0n1p1 - 512 MB  fat32 with boot, esp flags
			-> nvme0n1p2 - 732 MB ext4   for /boot mount
			-> nvme0n103 - 952.6 GB  ext4  -> this will be the LUKS encrypted partition

........ under the enctypted partitions I will create 3 logical volumes for /, /home and swap partitions 

	$ sudo cryptsetup luksFormat --hash=sha512 --key-size=512 /dev/nvme0n1p3
	$ sudo cryptsetup open --type=luks /dev/nvme0n1p3 nvme0n1p3_crypt

	$ sudo pvcreate /dev/mapper/nvme0n1p3_crypt
	$ sudo vgcreate vgubuntu /dev/mapper/nvme0n1p3_crypt
	$ sudo lvcreate -n lv_root -L 80G vgubuntu
	$ sudo lvcreate -n lv_home -L 808.6G vgubuntu
	$ sudo lvcreate -n lv_swap -L 64G vgubuntu

..... run installer and choose 'Something else' on installation type

..... after installation choose 'Continue Testing' to make changes to load encrypted partitions at startup 

	$ lsblk -o NAME,FSTYPE,SIZE,MOUNTPOINT,LABEL
	$ sudo blkid /dev/nvme0n1p3	-> save UUID value

...... mount installed OS on /mnt and chroot into int

	$ sudo mount /dev/mapper/vgubuntu-lv_root /mnt
	$ sudo mount /dev/nvme0n1p2 /mnt/boot
	$ sudo mount /dev/mapper/vgubuntu-lv_home /mnt/home
	$ sudo mount --bind /dev /mnt/dev
	$ sudo chroot /mnt
	$ mount -t proc proc /proc
	$ mount -t sysfs sys /sys
	$ mount -t devpts devpts /dev/pts

...... create /etc/crypttab file

	$ nano /etc/crypttab
	
add line: nvme0n1p3_crypt UUID="uuid from sudo blkid /dev/nvme0n1p3 command ran earlier" none luks,discard
	
	$ update-initramfs -k all -c

.... reboot ... all done


-------------------------------------------------

gnome-control-center - segmentation fault when running in dwm 
	gdb output : 
			Thread 1 "gnome-control-c" received signal SIGSEGV, Segmentation fault.
			__strstr_sse2_unaligned () at ../sysdeps/x86_64/multiarch/strstr-sse2-unaligned.S:40
			40	../sysdeps/x86_64/multiarch/strstr-sse2-unaligned.S: No such file or directory.


temp fix : reset last panel with  $ gsettings set org.gnome.ControlCenter last-panel ''
				  $ gsettings set org.gnome.Settings last-panel '' (on ubuntu 22.10)

--------------------------------------------------

when starting java swing gui apps - the gui won't show - for example visualvm

 -> to fix run $ wmname compiz  before starting program

--------------------------------------------------

when running dwm window manager - in order to set theme/icons/fonts to gtk applications (nautilus, gnome-control-center)
	1st solution
		if XDG_CONFIG_HOME is not defined - the system uses ~/.config as the location for configurarion files, this means settings.ini goes to 
		~/.config/gtk-3.0   - with the contents on 2nd soluton


	2nd solution
	$ export XDG_CONFIG_HOME=~/.local/xdg_config
	in ~/.local/xdg_config/gtk-3.0 (for gtk3 - find out which gtk version with $ gtk-launch --version) create settings.ini file with:
		[Settings]
		gtk-application-prefer-dark-theme = true
		gtk-icon-theme-name = DMZ-Black
		gtk-theme-name = Adwaita-dark
		gtk-font-name = mononoki 12

 themes and icons for ubuntu are found in : /usr/share/themes & /usr/share/icons


---------------------------------------------------


