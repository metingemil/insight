sudo dmidecode -t system	-> get system information in human readable format

packages:
	- arandr	->  another xrandr gui
	- pavucontrol	-> a volume control for pulseaudio sound server
	- fonts-noto-color-emoji -> font for colored emojis in ubuntu (dwm, dmenu and st)
		fc-match -s "NotoColorEmoji"
	- fonts-mononoki -> monospace font
		fc-match -s "mononoki"


---------------------------


$ sudo systemctl set-default multi-user	-> disable gui  (reboot required)
$ sudo systemctl set-default graphical	-> enable gui
$ sudo systemctl start gdm3		-> start gui manually (the GDM(gnome display manager) display manager)
$ from cmd line 	-> $ startx
			-> $ gnome-session-quit

$ systemctl status gdm3 -> status of gdm service
$ systemclt status display-manager	-> when a login manager is enabled this service must also be enabled


- when disabled gdm on ubuntu with dwm and reenable the gdm3 service it didn't start the gdm login manager
  even though gdm3 and display-manager services are enabled and ran 'sudo systemctl set-default graphical' command
	-> the issue was that  /etc/systemd/system/default.target link was broken
		-> make it point to /etc/systemd/system/default.target -> /lib/systemd/system/multi-user.target




- custom cursor theme in dwm:
	following links must be valid:
	/usr/share/icons/default/index.theme -> /etc/alternatives/x-cursor-theme
	/etc/alternatives/x-cursor-theme -> /usr/share/icons/DMZ-Black/cursor.theme (this is the used theme)

	user ~/.Xresources file to set configs:
		e.g.  Xcursor.size: 24

	- when disabling gdm - in order to load the .Xresouces file add command in .xinitrc:
		xrdb -merge /home/metgemil/.Xresources





- in ubuntu with dwm - when gdm is disabled and starting X via xinit -> the GTK-applications start very very slow (once started it looked like everything ran normally). When re-enabling gdm, the GTK-applications start normally.
	-> issue solved by adding in .xinitrc: 
		dbus-update-activation-environment DISPLAY XAUTHORITY
		(I belive dbus.service must also be active )


- in order to detect monitors automatically on plug/unplug:
	- use udev for calling a script when the kernel notices a new devices being connected/disconnected
	- add the following udev rule in /etc/udev/rules.d/95-monitors.rules
			ACTION=="change", RUN+="/home/metgemil/adjustMonitors.sh"

	- reload udev rules with: $ sudo udevadm control --reload-rules

	- my adjustMonitors.sh script:

		#!/bin/sh
		# udev runs as root, so we need to tell it how to connect to the X server:
		export DISPLAY=:0
		export XAUTHORITY=/home/metgemil/.Xauthority
		
		connect(){
		          /home/metgemil/.screenlayout/3_monitors_layout.sh
		    }
		
		disconnect(){
		          /home/metgemil/.screenlayout/main_monitor_layout.sh
		      }
		
		NO_DISPLAYS=$(xrandr | grep -w 'connected' | wc -l)
		
		if [ $NO_DISPLAYS = 1 ]
		then
		        disconnect
		elif [ $NO_DISPLAYS = 3 ]
		then
		        connect
		fi

	- my .screenlayout/main_monitor_layout.sh script (generated by arandr gui application)
		
		#!/bin/sh
		xrandr --output eDP-1 --primary --mode 1920x1080 --pos 0x0 --rotate normal --output DP-1 --off --output HDMI-1 --off --output DP-2 --off --output DP-1-1 --off --output DP-1-2 --off --output DP-1-3 --off
		


	- my .screenlayout/3_monitor_layout.sh script (generated by arandr gui application)

		#!/bin/sh
		xrandr --output eDP-1 --primary --mode 1920x1080 --pos 920x1080 --rotate normal --output DP-1 --off --output HDMI-1 --off --output DP-2 --off --output DP-1-1 --mode 1920x1080 --pos 0x0 --rotate normal --output DP-1-2 --off --output DP-1-3 --mode 1920x1080 --pos 1920x0 --rotate normal
		




- in order to show boot messages or hide boot messages and show a splash screen (or graphically via plymouth)
	- adequately configure /etc/default/grub file

		GRUB_DEFAULT=0
		GRUB_TIMEOUT_STYLE=hidden
		GRUB_TIMEOUT=0   # Do not show the GRUB menu at all (when only having a single OS)
		GRUB_DISTRIBUTOR=`lsb_release -i -s 2> /dev/null || echo Debian`
		GRUB_CMDLINE_LINUX_DEFAULT=""  # show boot messages / alternatively "noplymouth"  ("quiet splash" to hide text and show splash)
		GRUB_CMDLINE_LINUX="console=tty1"  # Redirect the kernel output to another tty / jump to tty after boot
		
	- run $ sudo update-grub2  to apply the grub config file


--------------------------------------------
* using nvidia proprietary drivers

	$ ubuntu-drivers devices	-> list nvidia available drivers

	$ sudo apt install mesa-utils
	$ glxgears			-> basic video test
	$ vlbank_mode=0 glxgears	-> ignore display refresh rate
	
	$ glxinfo | grep OpenGL		-> get the used graphic device
	$ glxinfo -B
	$ glxinfo|egrep "OpenGL vendor|OpenGL renderer"
	$ DRI_PRIME=1 glxinfo | grep OpenGL	-> DRI_PRIME=1 -> use nouveau driver

	$ lspci -k | grep -A 2 -E "(VGA|3D)"	-> check video devices on system

	$ sudo apt install glmark2
	$ DRI_PRIME=1 glmark2 --fullscreen --show-all-options -> graphics test

	$ nvidia-setting	-> graphics gui the select used GPU (PRIME Profiles menu item)

	$ nvidia-smi		-> list what processes uses nvidia gpu
	$ prime-select		-> select used GPU (prime-select query; sudo prime-select nvidia; sudo prime-select intel)
	$ sudo lshw -c video	-> list video hardware
	$ lshw -numeric -C display










